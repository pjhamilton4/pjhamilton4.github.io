import PropTypes from 'prop-types';
import styled, { css, withTheme } from 'styled-components';
import React, { useRef, useEffect, useState, Component } from 'react';

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (typeof call === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n    @media ", " {\n      ", "\n    }\n  "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var CUSTOM_CONF = 'awesomegrid';
var DIMENSIONS = ['xs', 'sm', 'md', 'lg', 'xl'];
var BASE_CONF = {
  mediaQuery: 'only screen',
  columns: {
    xs: 4,
    sm: 8,
    md: 8,
    lg: 12,
    xl: 12
  },
  gutterWidth: {
    xs: 1,
    sm: 1,
    md: 1.5,
    lg: 1.5,
    xl: 1.5
  },
  paddingWidth: {
    xs: 1,
    sm: 1,
    md: 1.5,
    lg: 1.5,
    xl: 1.5
  },
  container: {
    xs: 'full',
    // 'full' = max-width: 100%
    sm: 'full',
    // 'full' = max-width: 100%
    md: 'full',
    // 'full' = max-width: 100%
    lg: 90,
    // max-width: 1440px
    xl: 90 // max-width: 1440px

  },
  breakpoints: {
    xs: 1,
    sm: 48,
    // 768px
    md: 64,
    // 1024px
    lg: 90,
    // 1440px
    xl: 120 // 1920px

  }
};
var configs = [];

var hasCustomConf = function hasCustomConf(props) {
  return JSON.stringify(props.theme && props.theme[CUSTOM_CONF] || {});
};

var resolveConfig = function resolveConfig(props) {
  var themeConf = props.theme && props.theme[CUSTOM_CONF] || {};

  var conf = _objectSpread({}, BASE_CONF, themeConf);

  conf.media = Object.keys(conf.breakpoints).reduce(function (media, breakpoint) {
    var breakpointWidth = conf.breakpoints[breakpoint];
    media[breakpoint] = makeMedia([conf.mediaQuery, breakpointWidth >= 0 && "(min-width: ".concat(breakpointWidth, "rem)")].filter(Boolean).join(' and '));
    return media;
  }, {});
  return conf;
};

function config() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var customConf = hasCustomConf(props);

  if (configs[0] === customConf) {
    return configs[1];
  }

  var conf = resolveConfig(props);
  configs[0] = customConf;
  configs[1] = conf;
  return conf;
}

function makeMedia(media) {
  return function () {
    return css(_templateObject(), media, css.apply(void 0, arguments));
  };
}

function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n    background-color: #5901ad40;\n    outline: #fff solid 1px;\n  "]);

  _templateObject6 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n      ", "\n    "]);

  _templateObject5 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n      padding-left: ", "rem;\n      padding-right: ", "rem;\n    "]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$1() {
  var data = _taggedTemplateLiteral(["\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 100%;\n  box-sizing: border-box;\n\n  ", "\n  \n\n  ", "\n\n  ", "\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var Container = styled.div(_templateObject$1(), function (p) {
  return css(_templateObject2(), DIMENSIONS.map(function (d) {
    return config(p).container[d] && config(p).media[d](_templateObject3(), config(p).paddingWidth[d], config(p).paddingWidth[d]);
  }));
}, function (p) {
  return !p.fluid && css(_templateObject4(), DIMENSIONS.map(function (d) {
    return config(p).container[d] && config(p).media[d](_templateObject5(), typeof config(p).container[d] === 'number' ? "width: ".concat(config(p).container[d], "rem;") : "width: 100%;");
  }));
}, function (_ref) {
  var debug = _ref.debug;
  return debug && css(_templateObject6());
});
Container.displayName = 'Container';
Container.propTypes = {
  fluid: PropTypes.bool,
  children: PropTypes.node,
  debug: PropTypes.bool
};

function _templateObject10() {
  var data = _taggedTemplateLiteral(["\n    background-color: #5901ad40;\n    outline: #fff solid 1px;\n  "]);

  _templateObject10 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9() {
  var data = _taggedTemplateLiteral(["", ""]);

  _templateObject9 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject8 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7() {
  var data = _taggedTemplateLiteral(["", ""]);

  _templateObject7 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6$1() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject6$1 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5$1() {
  var data = _taggedTemplateLiteral(["\n        flex-direction: ", ";\n      "]);

  _templateObject5$1 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4$1() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject4$1 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteral(["\n      margin-left: -", "rem;\n      margin-right: -", "rem;\n    "]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$1() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$2() {
  var data = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  display: flex;\n  flex: 1 1 auto;\n  flex-wrap: wrap;\n  \n  ", "\n\n  ", "\n\n  ", "\n  \n  ", "\n\n  ", "\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var Row = styled.div(_templateObject$2(), function (p) {
  return css(_templateObject2$1(), DIMENSIONS.map(function (d) {
    return config(p).container[d] && config(p).media[d](_templateObject3$1(), config(p).gutterWidth[d] / 2, config(p).gutterWidth[d] / 2);
  }));
}, function (p) {
  return p.reverse && css(_templateObject4$1(), Array.isArray(p.reverse) ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject5$1(), p.reverse.indexOf(d) !== -1 ? "row-reverse" : "row");
  }) : 'flex-direction: row-reverse;');
}, function (p) {
  return p.align && css(_templateObject6$1(), _typeof(p.align) === 'object' ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject7(), p.align[d] && "align-items: ".concat(p.align[d]));
  }) : "align-items: ".concat(p.align, ";"));
}, function (p) {
  return p.justify && css(_templateObject8(), _typeof(p.justify) === 'object' ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject9(), p.justify[d] && "justify-content: ".concat(p.justify[d]));
  }) : "justify-content: ".concat(p.justify, ";"));
}, function (_ref) {
  var debug = _ref.debug;
  return debug && css(_templateObject10());
});
Row.displayName = 'Row';
var boolOrArray = PropTypes.oneOfType([PropTypes.bool, PropTypes.array]);
var stringOrObject = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);
Row.propTypes = {
  reverse: boolOrArray,
  align: stringOrObject,
  justify: stringOrObject,
  children: PropTypes.node,
  debug: PropTypes.bool
};

function _templateObject14() {
  var data = _taggedTemplateLiteral(["\n    background-color: #5901ad40;\n    outline: #fff solid 1px;\n  "]);

  _templateObject14 = function _templateObject14() {
    return data;
  };

  return data;
}

function _templateObject13() {
  var data = _taggedTemplateLiteral(["", ""]);

  _templateObject13 = function _templateObject13() {
    return data;
  };

  return data;
}

function _templateObject12() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject12 = function _templateObject12() {
    return data;
  };

  return data;
}

function _templateObject11() {
  var data = _taggedTemplateLiteral(["", ""]);

  _templateObject11 = function _templateObject11() {
    return data;
  };

  return data;
}

function _templateObject10$1() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject10$1 = function _templateObject10() {
    return data;
  };

  return data;
}

function _templateObject9$1() {
  var data = _taggedTemplateLiteral(["\n        flex-direction: ", ";\n      "]);

  _templateObject9$1 = function _templateObject9() {
    return data;
  };

  return data;
}

function _templateObject8$1() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject8$1 = function _templateObject8() {
    return data;
  };

  return data;
}

function _templateObject7$1() {
  var data = _taggedTemplateLiteral(["\n    ", ";\n    "]);

  _templateObject7$1 = function _templateObject7() {
    return data;
  };

  return data;
}

function _templateObject6$2() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject6$2 = function _templateObject6() {
    return data;
  };

  return data;
}

function _templateObject5$2() {
  var data = _taggedTemplateLiteral(["\n      ", "\n    "]);

  _templateObject5$2 = function _templateObject5() {
    return data;
  };

  return data;
}

function _templateObject4$2() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject4$2 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3$2() {
  var data = _taggedTemplateLiteral(["\n      padding-right: ", "rem;\n      padding-left: ", "rem;\n    "]);

  _templateObject3$2 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$2() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$3() {
  var data = _taggedTemplateLiteral(["\n  box-sizing: border-box;\n  flex: 1 0 auto;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", "\n\n  ", "\n  \n  ", "\n  \n  ", "\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}
var Col = styled.div(_templateObject$3(), function (p) {
  return !p.noGutter && css(_templateObject2$2(), DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject3$2(), config(p).gutterWidth[d] / 2, config(p).gutterWidth[d] / 2);
  }));
}, function (p) {
  return css(_templateObject4$2(), DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject5$2(), p[d] && "\n        flex: 1 1 ".concat(p[d] / config(p).columns[d] * 100, "%;\n        max-width: ").concat(p[d] / config(p).columns[d] * 100, "%;\n      "));
  }));
}, function (p) {
  return p.offset && css(_templateObject6$2(), DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject7$1(), _typeof(p.offset) === 'object' ? p.offset[d] !== undefined && "margin-left: ".concat(p.offset[d] > 0 ? p.offset[d] / config(p).columns[d] * 100 : 0, "%") : "margin-left: ".concat(p.offset / config(p).columns['xs'] * 100, "%"));
  }));
}, function (p) {
  return p.reverse && css(_templateObject8$1(), Array.isArray(p.reverse) ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject9$1(), p.reverse.indexOf(d) !== -1 ? 'column-reverse' : 'column');
  }) : 'flex-direction: column-reverse;');
}, function (p) {
  return p.align && css(_templateObject10$1(), _typeof(p.align) === 'object' ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject11(), p.align[d] && "align-items: ".concat(p.align[d]));
  }) : "align-items: ".concat(p.align, ";"));
}, function (p) {
  return p.justify && css(_templateObject12(), _typeof(p.justify) === 'object' ? DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject13(), p.justify[d] && "justify-content: ".concat(p.justify[d]));
  }) : "justify-content: ".concat(p.justify, ";"));
}, function (_ref) {
  var debug = _ref.debug;
  return debug && css(_templateObject14());
});
Col.displayName = 'Col';
var numberOrString = PropTypes.oneOfType([PropTypes.string, PropTypes.number]);
var stringOrObject$1 = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);
var numberOrObject = PropTypes.oneOfType([PropTypes.bool, PropTypes.object]);
var boolOrArray$1 = PropTypes.oneOfType([PropTypes.bool, PropTypes.array]);
Col.propTypes = {
  xs: numberOrString,
  sm: numberOrString,
  md: numberOrString,
  lg: numberOrString,
  xl: numberOrString,
  align: stringOrObject$1,
  justify: stringOrObject$1,
  offSet: numberOrObject,
  reverse: boolOrArray$1,
  noGutter: PropTypes.bool,
  children: PropTypes.node,
  debug: PropTypes.bool
};

function useEventListener(e,r,i){void 0===i&&(i=global);var o=useRef();useEffect(function(){o.current=r;},[r]),useEffect(function(){if(i&&i.addEventListener){var n=function(n){return o.current(n)};return i.addEventListener(e,n),function(){i.removeEventListener(e,n);}}},[e,i]);}

function getViewPort() {
  if (typeof window !== 'undefined' && window.innerWidth) {
    return window.innerWidth;
  }

  return null;
}
function getScreenClass() {
  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var screenClasses = DIMENSIONS;
  var breakpoints = config(props).breakpoints;
  var rootFont = typeof window !== 'undefined' ? window.getComputedStyle(document.querySelector('html')).getPropertyValue('font-size').replace('px', '') || 16 : 16;
  var pxBreakpoints = Object.values(breakpoints).map(function (bp) {
    return bp * rootFont;
  });
  var screenClass;
  var viewport = getViewPort();

  if (viewport) {
    screenClass = screenClasses[0];
    if (pxBreakpoints[1] && viewport >= pxBreakpoints[1]) screenClass = screenClasses[1];
    if (pxBreakpoints[2] && viewport >= pxBreakpoints[2]) screenClass = screenClasses[2];
    if (pxBreakpoints[3] && viewport >= pxBreakpoints[3]) screenClass = screenClasses[3];
    if (pxBreakpoints[4] && viewport >= pxBreakpoints[4]) screenClass = screenClasses[4];
  }

  return screenClass;
}

var Hidden = function Hidden(_ref) {
  var xs = _ref.xs,
      sm = _ref.sm,
      md = _ref.md,
      lg = _ref.lg,
      xl = _ref.xl,
      theme = _ref.theme,
      children = _ref.children;

  var _useState = useState('xs'),
      _useState2 = _slicedToArray(_useState, 2),
      currentScreen = _useState2[0],
      setCurrentScreen = _useState2[1];

  var setScreen = function setScreen() {
    var newScreen = getScreenClass({
      theme: theme
    });

    if (currentScreen !== newScreen) {
      setCurrentScreen(newScreen);
    }
  };

  useEffect(function () {
    setScreen();
  }, []);
  useEventListener('orientationchange', setScreen);
  useEventListener('resize', setScreen);

  var isHidden = function isHidden() {
    switch (currentScreen) {
      case 'xs':
        return xs;

      case 'sm':
        return sm;

      case 'md':
        return md;

      case 'lg':
        return lg;

      case 'xl':
        return xl;
    }
  };

  if (isHidden()) return false;
  return React.createElement(React.Fragment, null, children);
};
Hidden.displayName = 'Hidden';
var defaultProps = {
  xs: false,
  sm: false,
  md: false,
  lg: false,
  xl: false,
  children: null,
  theme: {}
};
var propTypes = {
  xs: PropTypes.bool,
  sm: PropTypes.bool,
  md: PropTypes.bool,
  lg: PropTypes.bool,
  xl: PropTypes.bool,
  theme: PropTypes.object,
  children: PropTypes.node
};
Hidden.defaultProps = defaultProps;
Hidden.propTypes = propTypes;
var hidden = withTheme(Hidden);

var Visible = function Visible(_ref) {
  var xs = _ref.xs,
      sm = _ref.sm,
      md = _ref.md,
      lg = _ref.lg,
      xl = _ref.xl,
      theme = _ref.theme,
      children = _ref.children;

  var _useState = useState('xs'),
      _useState2 = _slicedToArray(_useState, 2),
      currentScreen = _useState2[0],
      setCurrentScreen = _useState2[1];

  var setScreen = function setScreen() {
    var newScreen = getScreenClass({
      theme: theme
    });

    if (currentScreen !== newScreen) {
      setCurrentScreen(newScreen);
    }
  };

  useEffect(function () {
    setScreen();
  }, []);
  useEventListener('orientationchange', setScreen);
  useEventListener('resize', setScreen);

  var isVisible = function isVisible() {
    switch (currentScreen) {
      case 'xs':
        return xs;

      case 'sm':
        return sm;

      case 'md':
        return md;

      case 'lg':
        return lg;

      case 'xl':
        return xl;
    }
  };

  if (!isVisible()) return false;
  return React.createElement(React.Fragment, null, children);
};
Visible.displayName = 'Visible';
Visible.defaultProps = defaultProps;
Visible.propTypes = propTypes;
var visible = withTheme(Visible);

var ScreenClass =
/*#__PURE__*/
function (_Component) {
  _inherits(ScreenClass, _Component);

  function ScreenClass() {
    var _this;

    _classCallCheck(this, ScreenClass);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScreenClass).call(this));

    _this.setScreen = function () {
      var lastScreenClass = _this.state.screen;
      var actualScreenClass = getScreenClass(_this.props);

      if (!lastScreenClass || lastScreenClass !== actualScreenClass) {
        lastScreenClass = actualScreenClass;

        _this.setState({
          screen: actualScreenClass
        });
      }
    };

    _this.state = {
      screen: 'xs'
    };
    return _this;
  }

  _createClass(ScreenClass, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setScreen();

      if (typeof window !== 'undefined') {
        window.addEventListener('orientationchange', this.setScreen, false);
        window.addEventListener('resize', this.setScreen, false);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener('orientationchange', this.setScreen);
      window.removeEventListener('resize', this.setScreen);
    }
  }, {
    key: "render",
    value: function render() {
      var render = this.props.render;
      return React.createElement(React.Fragment, null, render && render(this.state.screen));
    }
  }]);

  return ScreenClass;
}(Component);
ScreenClass.defaultProps = {
  theme: {}
};
ScreenClass.displayName = 'ScreenClass';
ScreenClass.propTypes = {
  render: PropTypes.func
};
var screenClass = withTheme(ScreenClass);

function _templateObject3$3() {
  var data = _taggedTemplateLiteral(["\n      ::before {\n        content: '", "'\n      }\n    "]);

  _templateObject3$3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$3() {
  var data = _taggedTemplateLiteral(["\n    ", "\n  "]);

  _templateObject2$3 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$4() {
  var data = _taggedTemplateLiteral(["\n    z-index: 10;\n    position: fixed;\n    font-size: 1.5rem;\n    font-weight: bold;\n    right: 10px;\n    bottom: 10px;\n    width: 50px;\n    height: 30px;\n    background-color: #5901ad40;\n    display: flex;\n    border-radius: 5px;\n    justify-content: center;\n    align-items: center;\n  ", "\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}
var ScreenBadge = styled.div(_templateObject$4(), function (p) {
  return css(_templateObject2$3(), DIMENSIONS.map(function (d) {
    return config(p).breakpoints[d] && config(p).media[d](_templateObject3$3(), d);
  }));
});
ScreenBadge.displayName = 'ScreenBadge';

var util = {
  getScreenClass: getScreenClass,
  getViewPort: getViewPort
};

export { Col, Container, hidden as Hidden, Row, ScreenBadge, screenClass as ScreenClass, visible as Visible, config, util };
